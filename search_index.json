{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["!=","\"\"\"","#","0,","=","[]","[root]","__init__(self,","bst","chapter1","class","continu","def","dfs(root):","dfs(root.left)","dfs(root.right)","else:","in_order(root):","inordertraversal(root):","introduct","iter","left","left,","none","none):","none,","none:","out","out.append(root)","post_order(root):","postordertraversal(self,","pre_order(root):","preordertraversal(root):","re","recurs","res.append(root)","return","right","right,","root","root):","root,","root:","self.left","self.right","self.val","solut","stack","stack.append(root.left)","stack.append(root.right)","stack.append(root.val)","stack.pop()","stack:","t","treenode:","type(root)","val","中序遍历","保存树的类型","初始化输出数组","后序遍历","如果此时root不为树并且不为空","如果此时root是树","将右孩子压入栈","将左孩子压入栈","将树压入栈中","将根的值压入栈","将这个数加入输出数组中","循环栈","根节点等于出栈的节点","结束本次循环"]},"length":1},"tokenStore":{"root":{"0":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}},"docs":{},"!":{"docs":{},"=":{"docs":{"./":{"ref":"./","tf":0.0136986301369863}}}},"\"":{"docs":{},"\"":{"docs":{},"\"":{"docs":{"./":{"ref":"./","tf":0.0273972602739726}}}}},"#":{"docs":{"./":{"ref":"./","tf":0.0730593607305936}}},"=":{"docs":{"./":{"ref":"./","tf":0.0958904109589041}}},"[":{"docs":{},"]":{"docs":{"./":{"ref":"./","tf":0.0410958904109589}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"]":{"docs":{"./":{"ref":"./","tf":0.0136986301369863}}}}}}}},"_":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"_":{"docs":{},"_":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}}}}}}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"1":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}},"docs":{}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"./":{"ref":"./","tf":0.0136986301369863}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"./":{"ref":"./","tf":0.045662100456621}}}},"f":{"docs":{},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.0136986301369863}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0136986301369863}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0136986301369863}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.0136986301369863}}}}}}},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":10.004566210045661}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0091324200913242}},",":{"docs":{"./":{"ref":"./","tf":0.0136986301369863}}}}}}},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0136986301369863}},")":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}},",":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}},":":{"docs":{"./":{"ref":"./","tf":0.0273972602739726}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0273972602739726}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0136986301369863}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0273972602739726}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}}}},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0136986301369863}}}}}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0547945205479452}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0182648401826484}},",":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.045662100456621}},")":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}},",":{"docs":{"./":{"ref":"./","tf":0.0091324200913242}}},":":{"docs":{"./":{"ref":"./","tf":0.0273972602739726}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0091324200913242}}}}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0136986301369863}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0136986301369863}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0136986301369863}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0136986301369863}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0136986301369863}}}}}}}},":":{"docs":{"./":{"ref":"./","tf":0.0136986301369863}}}}}}}},"t":{"docs":{"./":{"ref":"./","tf":0.0273972602739726}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0273972602739726}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0091324200913242}}}}},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}}}},"保":{"docs":{},"存":{"docs":{},"树":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}}}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"输":{"docs":{},"出":{"docs":{},"数":{"docs":{},"组":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}}}}}}},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}}}},"如":{"docs":{},"果":{"docs":{},"此":{"docs":{},"时":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"不":{"docs":{},"为":{"docs":{},"树":{"docs":{},"并":{"docs":{},"且":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}}}}}}}},"是":{"docs":{},"树":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}}}}}}}}}},"将":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"压":{"docs":{},"入":{"docs":{},"栈":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}}}}}},"左":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"压":{"docs":{},"入":{"docs":{},"栈":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}}}}}},"树":{"docs":{},"压":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"中":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}}}}},"根":{"docs":{},"的":{"docs":{},"值":{"docs":{},"压":{"docs":{},"入":{"docs":{},"栈":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}}}}}},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"加":{"docs":{},"入":{"docs":{},"输":{"docs":{},"出":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}}}}}}}}}}},"循":{"docs":{},"环":{"docs":{},"栈":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}}},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"等":{"docs":{},"于":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}}}}}}}}}},"结":{"docs":{},"束":{"docs":{},"本":{"docs":{},"次":{"docs":{},"循":{"docs":{},"环":{"docs":{"./":{"ref":"./","tf":0.0045662100456621}}}}}}}}},"length":71},"corpusTokens":["!=","\"\"\"","#","0,","=","[]","[root]","__init__(self,","bst","chapter1","class","continu","def","dfs(root):","dfs(root.left)","dfs(root.right)","else:","in_order(root):","inordertraversal(root):","introduct","iter","left","left,","none","none):","none,","none:","out","out.append(root)","post_order(root):","postordertraversal(self,","pre_order(root):","preordertraversal(root):","re","recurs","res.append(root)","return","right","right,","root","root):","root,","root:","self.left","self.right","self.val","solut","stack","stack.append(root.left)","stack.append(root.right)","stack.append(root.val)","stack.pop()","stack:","t","treenode:","type(root)","val","中序遍历","保存树的类型","初始化输出数组","后序遍历","如果此时root不为树并且不为空","如果此时root是树","将右孩子压入栈","将左孩子压入栈","将树压入栈中","将根的值压入栈","将这个数加入输出数组中","循环栈","根节点等于出栈的节点","结束本次循环"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"Introduction","keywords":"","body":"Introduction\nChapter1\nBST\nclass TreeNode:\n    def __init__(self, val = 0, left = None, right = None):\n        self.val = val\n        self.left = left\n        self.right = right\n\n# recursive solution\n\ndef pre_order(root):\n    \"\"\"\n    root, left, right\n    \"\"\"\n    res = []\n    def dfs(root):\n        if not root:\n            return None\n        else:\n            res.append(root)\n            dfs(root.left)\n            dfs(root.right)\n    return res\n\n\ndef in_order(root):\n    \"\"\"\n    left, root, right\n    \"\"\"\n    res = []\n    def dfs(root):\n        if not root:\n            return None\n        else:\n            dfs(root.left)\n            res.append(root)\n            dfs(root.right)\n    return res\n\n\ndef post_order(root):\n    \"\"\"\n    left, right, root\n    \"\"\"\n    res = []\n\n    def dfs(root):\n        if not root:\n            return None\n        else:\n            dfs(root.left)\n            dfs(root.right)\n            res.append(root)\n    return res\n\n\n# iterative solution\ndef preorderTraversal(root):\n    if root is None:\n        return []\n    t = type(root)                                    # 保存树的类型\n    out = []                                        # 初始化输出数组\n    stack = [root]                                    # 将树压入栈中\n    while stack:                                    # 循环栈\n        root = stack.pop()                                    # 根节点等于出栈的节点\n        if type(root) != t and root is not None:            # 如果此时root不为树并且不为空\n            out.append(root)                        # 将这个数加入输出数组中\n            continue                        # 结束本次循环\n        if root:                              # 如果此时root是树\n            stack.append(root.right)            # 将右孩子压入栈\n            stack.append(root.left)                # 将左孩子压入栈\n            stack.append(root.val)                # 将根的值压入栈\n    return out\n\n\ndef inorderTraversal(root):\n    if root is None:\n        return []\n    t = type(root)\n    out = []\n    stack = [root]\n    while stack:\n        root = stack.pop()\n        if type(root) != t and root is not None:\n            out.append(root)\n            continue\n        if root:\n            stack.append(root.right)\n            stack.append(root.val)                    # 中序遍历\n            stack.append(root.left)\n    return out\n\n\ndef postorderTraversal(self, root):\n    if root is None:\n        return []\n    t = type(root)\n    out = []\n    stack = [root]\n    while stack:\n        root = stack.pop()\n        if type(root) != t and root is not None:\n            out.append(root)\n            continue\n        if root:\n            stack.append(root.val)                    # 后序遍历\n            stack.append(root.right)\n            stack.append(root.left)\n    return out\n\n"}}}